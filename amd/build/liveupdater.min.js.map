{"version":3,"file":"liveupdater.min.js","sources":["../src/liveupdater.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Live updater component for mod_learningmap.\r\n *\r\n * @module     mod_learningmap/liveupdater\r\n * @copyright 2021-2024, ISB Bayern\r\n * @author     Philipp Memmel\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport {BaseComponent} from 'core/reactive';\r\nimport {refreshModule} from 'core_course/actions';\r\nimport {renderLearningmap} from 'mod_learningmap/renderer';\r\n\r\n/**\r\n * The live updater component.\r\n */\r\nexport default class extends BaseComponent {\r\n    create(descriptor) {\r\n        this.element = descriptor.element;\r\n        this.reactive = descriptor.reactive;\r\n        this.cmId = descriptor.cmId;\r\n        this.dependingModuleIds = descriptor.dependingModuleIds;\r\n    }\r\n\r\n    getWatchers() {\r\n        const watchers = [];\r\n        this.dependingModuleIds.forEach(moduleId => {\r\n            watchers.push({watch: `cm[${moduleId}].completionstate:updated`, handler: this._rerenderLearningmap});\r\n            watchers.push({watch: `cm[${moduleId}].name:updated`, handler: this._rerenderLearningmap});\r\n        });\r\n        return watchers;\r\n    }\r\n\r\n    /**\r\n     * Handler for triggering the rerendering of the learningmap.\r\n     */\r\n    _rerenderLearningmap() {\r\n        // We need this to update the automatic completion status. Unfortunately, this old function does not update the\r\n        // JS, so we also need to render the learningmap afterwards.\r\n        refreshModule(this.element, this.cmId);\r\n        renderLearningmap(this.cmId);\r\n    }\r\n}\r\n"],"names":["BaseComponent","create","descriptor","element","reactive","cmId","dependingModuleIds","getWatchers","watchers","forEach","moduleId","push","watch","handler","this","_rerenderLearningmap"],"mappings":";;;;;;;;;uBA8B6BA,wBACzBC,OAAOC,iBACEC,QAAUD,WAAWC,aACrBC,SAAWF,WAAWE,cACtBC,KAAOH,WAAWG,UAClBC,mBAAqBJ,WAAWI,mBAGzCC,oBACUC,SAAW,eACZF,mBAAmBG,SAAQC,WAC5BF,SAASG,KAAK,CAACC,mBAAaF,sCAAqCG,QAASC,KAAKC,uBAC/EP,SAASG,KAAK,CAACC,mBAAaF,2BAA0BG,QAASC,KAAKC,0BAEjEP,SAMXO,kDAGkBD,KAAKX,QAASW,KAAKT,sCACfS,KAAKT"}